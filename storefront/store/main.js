import { defineStore } from 'pinia';

// This is where we keep track of both carts, the associated customer, and applied discounts
// These values and actions can be accessed by importing { useMainStore }

export const useMainStore = defineStore('main', {
  state: () => ({
    cart: {
      billing_address_id: '',
      completed_at: '',
      context: {},
      created_at: '',
      customer_id: '',
      deleted_at: '',
      email: '',
      id: '',
      idempotency_key: '',
      metadata: {},
      payment_authorized_at: '',
      payment_id: '',
      payment_session: {},
      region_id: '',
      shipping_address_id: '',
      type: '',
      updated_at: '',
      billing_address: {
        address_1: '',
        address_2: '',
        city: '',
        company: '',
        country_code: '',
        created_at: '',
        customer_id: '',
        deleted_at: '',
        first_name: '',
        id: '',
        last_name: '',
        metadata: {},
        phone: '',
        postal_code: '',
        province: '',
        updated_at: '',
        customer: {},
        country: {},
      },
      shipping_address: {
        address_1: '',
        address_2: '',
        city: '',
        company: '',
        country_code: '',
        created_at: '',
        customer_id: '',
        deleted_at: '',
        first_name: '',
        id: '',
        last_name: '',
        metadata: {},
        phone: '',
        postal_code: '',
        province: '',
        updated_at: '',
        customer: {},
        country: {},
      },
      items: [
        {
          allow_discounts: true,
          cart_id: '',
          claim_order_id: '',
          created_at: '',
          description: '',
          fulfilled_quantity: 0,
          has_shipping: null,
          id: '',
          is_giftcard: false,
          is_return: false,
          metadata: { pickup: true },
          order_edit_id: '',
          order_id: '',
          original_item_id: '',
          quantity: 1,
          returned_quantity: null,
          shipped_quantity: null,
          should_merge: true,
          swap_id: '',
          thumbnail: '',
          title: '',
          unit_price: 0,
          updated_at: '',
          variant_id: '',
          cart: {},
          order: {},
          swap: {},
          claim_order: {},
          tax_lines: [],
          adjustments: [],
          order_edit: {},
          variant: {},
          refundable: 0,
          subtotal: 0,
          tax_total: 0,
          total: 0,
          original_total: 0,
          original_tax_total: 0,
          discount_total: 0,
          raw_discount_total: 0,
          gift_card_total: 0,
          includes_tax: false,
        },
      ],
      region: {},
      discounts: [],
      gift_cards: [],
      customer: {},
      payment_sessions: [],
      payment: {},
      shipping_methods: [],
      sales_channel_id: '',
      sales_channel: {},
      shipping_total: 0,
      discount_total: 0,
      raw_discount_total: 0,
      item_tax_total: 0,
      shipping_tax_total: 0,
      tax_total: 0,
      refunded_total: 0,
      total: 0,
      subtotal: 0,
      refundable_amount: 0,
      gift_card_total: 0,
      gift_card_tax_total: 0,
    },

    customer: {
      billing_address_id: '',
      created_at: '',
      deleted_at: '',
      email: '',
      first_name: '',
      has_account: false,
      id: '',
      last_name: '',
      metadata: {},
      phone: '',
      updated_at: '',
      billing_address: {},
      shipping_addresses: [],
      orders: [],
      groups: [],
    },
    discounts: [],
  }),
  actions: {
    setCustomer(customer) {
      this.customer = customer;
    },
    setCart(newCart) {
      this.cart = newCart;
    },
    setDiscounts(discountArray) {
      this.discounts = discountArray;
    },
  },
});
